0- crear base de datos ecommerce ;
    crear colecciones mensajes y productos 

use ecommerce

1) Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB. 


db.mensajes.insertMany([
    {email:"user1@gmail.com", text:"Hola!", time:ISODate()},
    {email:"user2@gmail.com", text:"Hola, como estas?", time:ISODate()},
    {email:"user1@gmail.com", text:"Muy bien, gracias", time:ISODate()},
    {email:"user3@gmail.com", text:"Hola!", time:ISODate()},
    {email:"user2@gmail.com", text:"Que tal?", time:ISODate()},
    {email:"user1@gmail.com", text:"Quiero comprar con descuento", time:ISODate()},
    {email:"user3@gmail.com", text:"Si, estamos esperando las ofertas", time:ISODate()},
    {email:"user1@gmail.com", text:"Cuando salen las ofertas?", time:ISODate()},
    {email:"user2@gmail.com", text:"Los días martes", time:ISODate()},
    {email:"user3@gmail.com", text:"Creo que son los miercoles, será que las adelantaron?", time:ISODate()},
])


2) Definir las claves de los documentos en relación a los campos de las tablas de esa base. En el caso de los productos, poner valores al campo precio entre los 100 y 5000 pesos(eligiendo valores intermedios, ej: 120, 580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990). 

db.productos.insertMany([
    {title:"pan", price:1250,
    {title:"pan con queso", price:1600,
    {title:"pan con manteca", price:925,
    {title:"pan con pan", price:3600,
    {title:"pan con mas pan", price:4150,
    {title:"pan con azucar", price:568,
    {title:"pan con mermelada", price:3480,
    {title:"pan frezco", price:690 ,
    {title:"pancito", price:4800,
    {title:"pan de pan", price:125
])


3) Listar todos los documentos en cada colección.

db.productos.find()
db.mensajes.find()


4)Mostrar la cantidad de documentos almacenados en cada una de ellas.

db.productos.estimatedDocumentCount()


5)Realizar un CRUD sobre la colección de productos:
    a- Agregar un producto más en la colección de productos 
    
    db.productos.insertOne({title:"pan pero mas caro", price:4950"})

    b- Realizar una consulta por nombre de producto específico:
        I) Listar los productos con precio menor a 1000 pesos.

            db.productos.find({"price":{$lt: 1000}})

        II) Listar los productos con precio entre los 1000 a 3000 pesos.

             db.productos.find({$and:[{"price":{$gt: 1000}},{"price":{$lt: 3000}}]})

        III) Listar los productos con precio mayor a 3000 pesos.

            db.productos.find({"price":{$gt: 3000}})

        IV) Realizar una consulta que traiga sólo el nombre del tercer producto más barato.

            db.productos.find().sort({"price":1}).limit(1).skip(2)

    c- Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.

        db.productos.updateMany({},{$set:{"Stock": 100}})

    d- Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 

    db.productos.updateMany({"price":{$gt:4000}},{$set:{"Stock": 0}})

    e- Borrar los productos con precio menor a 1000 pesos 

    db.productos.deleteMany({"price":{$lt:1000} })

6) Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.

    use admin
    db.createUser({
        user:"pepe",
        pwd:"asd456",
        roles:[
            {role:"read",
            db:"ecommerce"}
        ]
    })

    levanto el servidor: mongod --auth --dbpath "C:\Program Files\MongoDB\Server\6.0\data"
    entro a mongosh: mongosh -u pepe -p asd456

    db.productos.find()
    devuelve todos los documentos

    db.productos.deleteOne({title:"pan pero mas caro"})
 DEVUELVE ===>
MongoServerError: not authorized on ecommerce to execute command { delete: "productos", deletes: [ { q: { title: "pan pero mas caro" }, limit: 1 } ], ordered: true, lsid: { id: UUID("f74a7dcc-e47d-4ed4-a77c-400fd2540dbc") }, $db: "ecommerce" }
ecommerce>
